# Android Gradle CircleCI 2.0 configuration
#
version: 2
jobs:
    build:
        branches:
            only:
            - firebase
        docker:
            - image: circleci/android:api-25-alpha

        working_directory: ~/code
        environment:
            JVM_OPTS: -Xmx3200m
        steps:
            - checkout
            - run:
                name: Create android licenses directory if it doesn't exist
                command: mkdir -p /opt/android/sdk/licenses
            - run:
                name: Transfer Android SDK licenses
                command: cp licenses/android-sdk-license /opt/android/sdk/licenses/
            - restore_cache:
                key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
            - run:
                name: Download Dependencies
                command: ./gradlew androidDependencies
            - save_cache:
                paths:
                    - ~/.gradle
                key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}
            - run:
                name: Build debug APK and release APK
                command: |
                  ./gradlew :app:assemble
                  ./gradlew :app:assembleAndroidTest
            - run:
                name: Store Google Service Account
                command: echo $GCLOUD_SERVICE_KEY > ${HOME}/gcloud-service-key.json
            - run:
                name: Authorize gcloud and set config defaults
                command: |
                  sudo gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
                  sudo gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            - run:
                name: Test with Firebase Test Lab
                command: >
                  sudo gcloud firebase test android run
                    --app app\build\outputs\apk\prod\debug\app-prod-debug.apk
                    --test app\build\outputs\apk\androidTest\mock\debug\app-mock-debug-androidTest.apk
                    --results-bucket cloud-test-${GOOGLE_PROJECT_ID}
            - run:
                name: Install gsutil dependency and copy test results data
                command: |
                  sudo pip install -U crcmod
                  sudo gsutil -m cp -r -U `sudo gsutil ls gs://[BUCKET_NAME]/[OBJECT_NAME] | tail -1` ${CIRCLE_ARTIFACTS}/ | true